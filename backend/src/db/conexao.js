// src/db/conexao.js
import pkg from 'pg';
import dotenv from 'dotenv';

// Carrega variÃ¡veis do arquivo .env localmente. 
// No Render, as variÃ¡veis sÃ£o injetadas diretamente pelo painel.
dotenv.config();

const { Pool } = pkg;
const isProduction = process.env.NODE_ENV === 'production';

let pool;

// ðŸ›‘ CORREÃ‡ÃƒO: Usar a string de conexÃ£o se estiver em PRODUÃ‡ÃƒO OU se a variÃ¡vel estiver definida.
if (isProduction || process.env.DATABASE_URL) {
Â  // ðŸ‘‰ Render ou outro host que fornece DATABASE_URL (via ${internalDatabaseUrl})
Â  pool = new Pool({
Â  Â  connectionString: process.env.DATABASE_URL,
Â  Â  // NecessÃ¡rio para conexÃµes SSL do Render para PostgreSQL
Â  Â  ssl: isProduction ? { rejectUnauthorized: false } : false,
Â  });
} else {
Â  // ðŸ‘‰ Ambiente local (lendo do arquivo .env)
Â  pool = new Pool({
Â  Â  host: process.env.DB_HOST,
Â  Â  port: Number(process.env.DB_PORT),
Â  Â  user: process.env.DB_USER,
Â  Â  password: String(process.env.DB_PASSWORD),
Â  Â  database: process.env.DB_NAME,
Â  Â  // SSL desligado para ambiente de desenvolvimento local
Â  Â  ssl: false, 
Â  });
}

// Testa a conexÃ£o ao iniciar
pool.connect()
Â  .then(client => {
Â  Â  console.log("ConexÃ£o PostgreSQL estabelecida com sucesso!");
Â  Â  client.release(); // Libera o cliente de volta para o pool
Â  })
Â  .catch(err => console.error('Erro ao conectar ao PostgreSQL:', err));

export default pool;